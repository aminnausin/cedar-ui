name: Deploy VitePress site to Pages

on:
  push:
    branches: [ main ]

  workflow_dispatch:


permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  check-file-changes:
    runs-on: ubuntu-latest
    outputs:
      docs_changed: ${{ steps.filter.outputs.docs_changed == 'true' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect Package file changes
      id: filter
      uses: dorny/paths-filter@v2
      with:
        base: ${{ github.event.before }}
        filters: |
          docs_changed:
              - 'apps/www/**'
    - name: Show filtered changes
      run: |
        echo "Docs changed: ${{ steps.filter.outputs.docs_changed }}"
  build:
    needs: [ check-file-changes ]
    if: needs.check-file-changes.outputs.docs_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install PNPM
      uses: pnpm/action-setup@v3
      with:
        version: 9
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 22
        cache: pnpm
    - name: Install dependencies
      run: pnpm install
    - name: Setup Pages
      uses: actions/configure-pages@v4
    - name: Build with VitePress
      run: pnpm docs:build
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: apps/www/.vitepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
